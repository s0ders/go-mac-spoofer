name: build

on:
  push:
    branches: [ "main" ]

env:
  SEMVER_GIT_REPO_URL: https://github.com/s0ders/go-mac-spoofer.git
  GIT_CI_USERNAME: go-semver-ci
  GIT_CI_EMAIL: go-semver@release.ci
  SBOM_FILE: sbom.spdx

jobs:

  gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          GITLEAKS_ENABLE_UPLOAD_ARTIFACT: false
          GITLEAKS_ENABLE_SUMMARY: false

  go-build:
    runs-on: ubuntu-latest
    needs: gitleaks
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20

    - name: Go Build
      run: go build -ldflags=-w github.com/s0ders/go-mac-spoofer

    - name: Go Test
      run: go test -v ./...

  pre-release-detection:
    runs-on: ubuntu-latest
    needs: go-build
    outputs:
      release: ${{ steps.gosemver.outputs.NEW_RELEASE }}
      semver: ${{ steps.gosemver.outputs.SEMVER }}
    steps:
    - uses: actions/checkout@v3

    - name: Go Semver Release Dryrun
      id: gosemver
      uses: s0ders/go-semver-release@v1.5.1
      with:
        repository-url: ${{ env.SEMVER_GIT_REPO_URL }}
        token: ${{ secrets.GIT_TOKEN }}
        tag-prefix: 'v'
        dry-run: 'true'
        verbose: 'true'


    - name: Push Semver tag
      if: ${{needs.pre-release-detection.outputs.release == 'true'}}
      run: |
        git tag -a ${{needs.pre-release-detection.outputs.semver}} -m "${{needs.pre-release-detection.outputs.semver}}"
        git push origin ${{needs.pre-release-detection.outputs.semver}}
